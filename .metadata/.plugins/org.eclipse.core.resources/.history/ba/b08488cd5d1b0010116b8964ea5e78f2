package auth.servlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Calendar;
import java.util.Date;

import jakarta.servlet.ServletContext;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.Cookie;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

/**
 *   Servlet  등록(생성) 방법 2가지
 *   1)  web.xml
 *   2) @annotation - 클래스위에  @WebServlet
 */
@WebServlet(urlPatterns = "/login", loadOnStartup = 1)
public class LoginCheckServlet extends HttpServlet{
	String id = "hee";
	String pwd = "1234";
	public LoginCheckServlet() {
		System.out.println("LoginServlet constructor call......");
	}
	
	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String userId = request.getParameter("id");
		String userP = request.getParameter("pwd");
		String name = request.getParameter("name");
		HttpSession session = request.getSession();
		
		response.setContentType("text/html;charset=UTF-8");
		
		if (id.equals(userId) && pwd.equals(userP)) {
			PrintWriter out = response.getWriter();
			session.setAttribute("id", id);
			session.setAttribute("name", name);
			
			//로그인된 시간
			   Calendar cal=  Calendar.getInstance();//현재날짜와 시간설정
			   int y = cal.get(Calendar.YEAR);
			   int m = cal.get(Calendar.MONTH)+1;
			   int d = cal.get(Calendar.DATE);
			   
			   int h = cal.get(Calendar.HOUR_OF_DAY);
			   int min = cal.get(Calendar.MINUTE);
			   int s = cal.get(Calendar.SECOND);
			   
			   StringBuilder sb = new StringBuilder();
			   sb.append(y+"년 ");
			   sb.append(m+"월 ");
			   sb.append(d+"일 ");
			   sb.append(h+"시 ");
			   sb.append(min+"분 ");
			   sb.append(s+"초");
			   
			   session.setAttribute("creationTime", sb.toString());
			
			ServletContext application = request.getServletContext();
			String contextPath = application.getContextPath();
			
			// 로그인 된 Id를 Cookie에 저장
			Cookie cookie = new Cookie("saveId", id);
			cookie.setMaxAge(60*60*24*365);
			cookie.setPath("/");
			response.addCookie(cookie);
			
			response.sendRedirect(contextPath+"/login/LoginOk.jsp");
			out.print("<script>");
			out.print("alert('로그인 성공')");
			out.print("</script>");
			
		} else {
			PrintWriter out = response.getWriter();
			out.print("<script>");
			out.println("history.back();");
			out.print("alert('아이디와 비밀번호를 다시 입력해주세연')");
			out.print("</script>");
		}
	}
}
